{"version":3,"sources":["reportWebVitals.js","components/Header/Header.jsx","components/Display/Display.jsx","components/List/List.jsx","components/Footer/Footer.jsx","components/App/App.jsx","index.js"],"names":["reportWebVitals","onPerfEntry","Function","then","_ref","getCLS","getFID","getFCP","getLCP","getTTFB","searchValue","Header","props","_useState","useState","_useState2","_slicedToArray","citylist","changeList","debouncedSave","useCallback","debounce","fetch","response","ok","json","Error","data","citiesData","rightValue","replace","filteredCities","filter","item","regex","RegExp","concat","name","match","_jsxs","className","children","_jsx","onBlur","e","searchbox","document","getElementById","relatedTarget","id","preventDefault","classList","remove","add","onKeyUp","target","value","onKeyDown","enterClick","placeholder","tabIndex","map","index","onClick","cityItemClick","country","showWeather","globalChangeTempCels","globalTempConvert","globalChangeTempFahr","Display","_React$Component","_inherits","_super","_createSuper","_classCallCheck","call","_createClass","key","this","cards","length","loaded","error","updateDisplayCard","cityName","currentDate","currentTime","weatherDesc","alt","src","iconLink","convertToCels","tempConvert","convertToFahr","temperature","feelsLikeTemp","humidity","windSpeed","React","Component","List","_this","myref","createRef","state","settings","showSettings","bind","_assertThisInitialized","setState","_this2","onChange","getTimeUpdate","type","htmlFor","DragDropContext","onDragEnd","handleOnDragEnd","Droppable","droppableId","provided","_objectSpread","ref","innerRef","droppableProps","TransitionGroup","CSSTransition","timeout","classNames","Draggable","draggableId","_createElement","draggableProps","dragHandleProps","deleteCard","moreInfo","Footer","href","rel","APIKEY","App","city","date","time","icon","description","wind","isLoaded","weatherCards","checkedBtnId","fetchData","fetchDataEnter","moreInfoRequest","deleteCards","updateCards","getUpdateTime","startInterval","newInterval","updateDisplay","globalChangeToCels","globalChangeToFahr","localStorage","getItem","storage","JSON","parse","storagetime","querySelectorAll","forEach","defaultChecked","intervalTime","interval","setInterval","_this3","currCard","Date","timeNow","getHours","getMinutes","Math","round","main","temp","weather","setItem","stringify","_this4","input","querySelector","blur","extraCard","pop","iconId","currentIcon","—ÅityTime","getTime","getTimezoneOffset","timezone","newDate","Intl","DateTimeFormat","month","day","format","tempToWeatherCards","cardId","String","speed","_toConsumableArray","feels_like","catch","keyCode","currentData","_this5","card","_this6","afterDelCards","indexOf","preventCardIndex","preventCard","chosenCardIndex","nextCardIndex","nextCard","_this7","clearInterval","_this8","_this9","celcius","feelslike","_this10","fahrenheit","currItem","_this11","_this12","result","_this13","destination","items","Array","from","_items$splice","splice","source","reorderedItem","updateCard","ReactDOM","render","StrictMode"],"mappings":"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","file":"static/js/main.8952f12e.chunk.js","sourcesContent":["const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React, { useState, useCallback } from \"react\";\nimport debounce from \"lodash.debounce\";\n\nimport \"../../styles/Header.css\";\n\nlet searchValue = \"\";\nfunction Header (props) {\n    const [citylist, changeList] = useState(\"\")\n    const debouncedSave = useCallback(\n        debounce(() => {\n        if(searchValue !== \"\") {\n           fetch(\"https://pkgstore.datahub.io/core/world-cities/world-cities_json/data/5b3dd46ad10990bca47b04b4739a02ba/world-cities_json.json\")\n           .then(response => {\n                if (response.ok) {\n                return response.json();\n                } else {\n                    throw new Error(\"Something went wrong ...\");\n                }\n            })\n            .then((data) => {\n                let citiesData = data;\n                let rightValue = searchValue.replace(/[^a-zA-Z0-9–ê-–Ø–∞-—è\\s]/g, \"\");\n                let filteredCities = citiesData.filter(item => {\n                    let regex = new RegExp(`^${rightValue}`, \"gi\");\n                    return item.name.match(regex)\n                });\n                changeList(filteredCities)\n            })\n        }\n        else {\n            changeList(\"\")\n        }}, 250)\n    \n    );\n    \n    const handleKeyUp = (e) => {\n        searchValue = e.target.value;\n        let searchbox = document.getElementById(\"search-list\");\n        if(e.target.value !== \"\") {\n            searchbox.classList.remove(\"cities-list-before\");\n            searchbox.classList.add(\"cities-list-after\");\n        }\n        else {\n            searchbox.classList.remove(\"cities-list-after\");\n            searchbox.classList.add(\"cities-list-before\");\n        }\n            debouncedSave();\n    };\n\n        \n    const inputBlur = (e) => {\n        let searchbox = document.getElementById(\"search-list\");\n        if (!e.relatedTarget) {\n            searchbox.classList.remove(\"cities-list-after\");\n            searchbox.classList.add(\"cities-list-before\");\n        }\n        else if(e.relatedTarget && e.relatedTarget.id === \"search-list\" || e.relatedTarget.className === \"search-item\") {\n            e.preventDefault();\n        }\n        else {\n            searchbox.classList.remove(\"cities-list-after\");\n            searchbox.classList.add(\"cities-list-before\");\n        }\n    }\n        return (\n            <header className={\"header\"}>\n                <h1 className=\"page-name\">MyWeather</h1>\n                <div  className=\"header-main\">\n                    <div className=\"search-block\">\n                        <input onBlur={inputBlur} onKeyUp={handleKeyUp} onKeyDown={props.enterClick} \n                        placeholder=\"Enter city\" className=\"search-input\"></input>\n                        <div tabIndex=\"1\" id=\"search-list\" className=\"cities-list-before\">\n                       {citylist !== \"\" ? citylist.map((item, index) => {\n                           return (\n                               <li tabIndex=\"1\" onClick={() => {props.cityItemClick(item.name)}} key={index} className=\"search-item\">{item.name} ({item.country })</li>\n                           )\n                       }) : \"\"}\n                        </div>\n                    </div>\n                    <button onClick={props.showWeather} className=\"search-btn\">Show weather</button>\n                </div>\n                <div className=\"page-settings\">\n                    <div className=\"cels-fahr-selector\">\n                        <div onClick={props.globalChangeTempCels} className={props.globalTempConvert === false ? \"cels-block\" : \"cels-block-after\"}><span className=\"temp-item\"><sup>o</sup>C</span></div>\n                        <div onClick={props.globalChangeTempFahr} className={props.globalTempConvert === true ? \"fahr-block\" : \"fahr-block-after\"}><span className=\"temp-item\"><sup>o</sup>F</span></div>\n                    </div>\n                </div>\n            </header>\n        )\n};\nexport default Header;\n","import React from 'react';\n\nimport '../../styles/Display.css';\n\nclass Display extends React.Component {\n    constructor(props) {\n        super(props);\n    }\n    render () {\n        return (\n            <div className={this.props.cards.length > 0 ? 'display' : \"display-none\"}>\n                <div className={this.props.loaded === true ? 'display-before' : 'display-after'}>\n                    <p className='starting-message'>{this.props.error ? 'Please enter correct city name': 'Please enter a city name'}</p> \n                </div>\n                <div className=\"display-wrapper\">\n                    <div className='upd-btn-wrapper'>\n                        <button onClick={this.props.updateDisplayCard} className='update-btn'><i className=\"fas fa-sync-alt\"></i></button>\n                    </div>\n                    <div className='display-main'>\n                        <div className='main'>\n                            <p className='city-name'>{this.props.cityName}</p>\n                            <p className='current-date'>{this.props.currentDate}</p>\n                            <p className='current-time'>{this.props.currentTime}</p>\n                            <p className='weather-desc'>{this.props.weatherDesc}</p>\n                            <img alt='weather icon' className='weather-icon' src={this.props.iconLink}></img>\n                        </div>\n                        <div className='main-temp'>\n                            <div className='temp-block'>\n                                <div className=\"temperature-switch\">\n                                    <button onClick={this.props.convertToCels} className={this.props.tempConvert === false ? 'celcius-switcher' : 'celcius-switcher-after'}><sup>o</sup>C</button>\n                                    <button onClick={this.props.convertToFahr} className={this.props.tempConvert === true ? 'fahrenheit-switcher' : 'fahrenheit-switcher-after'}><sup>o</sup>F</button>\n                                </div>\n                                <span className='temp'>{this.props.temperature}<sup>o</sup></span>\n                                <p className='feelslike-temp-wrapper'>Feels like: \n                                    <span className='feelslike_temp'> {this.props.feelsLikeTemp}<sup>o</sup></span>\n                                </p>\n                            </div>\n                            <div className='temp-block-more'>\n                                <p className='humidity'>Humidity: {this.props.humidity}</p>\n                                <p className='wind-speed'>Wind: {this.props.windSpeed}</p>\n                            </div>\n                        </div>\n                    </div>\n                </div>\n            </div>\n        );\n    };\n};\nexport default Display;\n","import React from \"react\";\nimport { DragDropContext, Droppable, Draggable } from \"react-beautiful-dnd\";\nimport { CSSTransition, TransitionGroup } from \"react-transition-group\";\n\nimport \"../../styles/List.css\";\n\nclass List extends React.Component {\n    constructor(props) {\n        super(props);\n        this.myref = React.createRef();\n        this.state = {\n            settings: false\n        }\n        this.showSettings = this.showSettings.bind(this);\n    };\n    showSettings () {\n        this.state.settings === false ? this.setState({settings: true}) : this.setState({settings: false});\n    }\n    render () {\n        return (\n            <div className={this.props.cards.length > 0 ? \"list\" : \"list-none\"}>\n                <div className=\"list-block\">\n                <div className=\"settings-wrapper\">\n                    <div className=\"settings\">\n                        <h4 className=\"label\">Last seen</h4>\n                        <button onClick={this.showSettings} className=\"update-settigns\"><i className=\"fas fa-cog\"></i></button>\n                    </div>\n                    <div className={this.state.settings === true ? \"settings-block\" : \"settings-block-none\"}>\n                        <h4 className=\"settings-label\">Automatic weather update every: </h4>\n                        <p className=\"radio-text\">\n                            <input onChange={this.props.getTimeUpdate} className=\"radio\" id=\"10min\" type=\"radio\" name=\"updtime\" value=\"10\"></input>\n                            <label htmlFor=\"10min\">10 minutes</label>\n                        </p>\n                        <p className=\"radio-text\">\n                            <input onChange={this.props.getTimeUpdate} className=\"radio\" id=\"30min\" type=\"radio\" name=\"updtime\" value=\"30\"></input>\n                            <label htmlFor=\"30min\">30 minutes</label>\n                        </p>\n                        <p className=\"radio-text\">\n                            <input onChange={this.props.getTimeUpdate} className=\"radio\" id=\"60min\" type=\"radio\" name=\"updtime\" value=\"60\"></input>\n                            <label htmlFor=\"60min\">60 minutes</label>\n                        </p>\n                    </div>\n                </div>\n                <DragDropContext onDragEnd={this.props.handleOnDragEnd}>\n                    <Droppable droppableId=\"cards\">\n                    {(provided) => (\n                        <div ref={provided.innerRef} {...provided.droppableProps} className=\"list-app\">\n                        <TransitionGroup>\n                            {this.props.cards.map((item, index) => {\n                                return (\n                                    <CSSTransition\n                                        timeout={450}\n                                        classNames=\"item\"\n                                        key={index}\n                                    >\n                                    <Draggable draggableId={item[4]} index={index} key={item[4]}>\n                                    {(provided) => (\n                                    <div ref={provided.innerRef} {...provided.draggableProps} {...provided.dragHandleProps} key={item[4]} className=\"list-item\">\n                                        <div className=\"list-item-main\">\n                                            <div className=\"main-listitem-block\">\n                                                <h2 className=\"card-name\">{item[0]}</h2>\n                                                <p className=\"description-weather\">{item[3]}</p>\n                                            </div>\n                                            <div className=\"listitem-description\">\n                                                <p className=\"card-temp\">{item[1]}<sup>o</sup></p>\n                                                <p className=\"upd-info\">Last update: {item[2]}</p>\n                                            </div>\n                                            <div className=\"del-btn-block\">\n                                                <button onClick={() => {this.props.deleteCard(item)}} className=\"delete-card\"><i className=\"fas fa-times\"></i></button>\n                                            </div>\n                                        </div>\n                                        <button onClick={() => {this.props.moreInfo(item)}} className=\"more-info\">Details</button>\n                                        {provided.placeholder}\n                                    </div>\n                                    )}\n                                    </Draggable>\n                                    </CSSTransition>\n                                )\n                            })}\n                        </TransitionGroup>\n                        {provided.placeholder}\n                        </div>\n                    )}\n                    </Droppable>\n                </DragDropContext>\n            </div>\n            </div>\n        )\n    }\n}\nexport default List;","import React from 'react';\n\nimport '../../styles/Footer.css'\n\nconst Footer = () => {\n    return (\n        <footer className=\"footer\">\n            <p className=\"footer-link\">Created by <a href=\"https://github.com/MotyaBolt\" rel=\"noreferrer\" target=\"_blank\" className=\"profile-link\">Matvey Boltach</a></p>\n            <div className=\"icons\">\n                <a className=\"link\" rel=\"noreferrer\" target=\"_blank\" href=\"https://vk.com/lupapupa0505\"><i className=\"fab fa-vk\"></i></a>\n                <a className=\"link\" rel=\"noreferrer\" target=\"_blank\" href=\"https://t.me/matv_money\"><i className=\"fab fa-telegram\"></i></a>\n                <a className=\"link\" rel=\"noreferrer\" target=\"_blank\" href=\"https://github.com/MotyaBolt\"><i className=\"fab fa-github\"></i></a>\n                <a className=\"link\" rel=\"noreferrer\" target=\"_blank\" href=\"https://codepen.io/motyabolt\"><i className=\"fab fa-codepen\"></i></a>\n                <a className=\"link\" rel=\"noreferrer\" target=\"_blank\" href=\"https://mail.google.com/mail/u/0/#inbox?compose=new\"><i className=\"far fa-envelope\"></i></a>\n            </div>\n        </footer>\n    )\n}\nexport default Footer;","import React from 'react';\nimport Header from '../Header/Header';\nimport Display from '../Display/Display';\nimport List from '../List/List';\nimport Footer from '../Footer/Footer';\nimport '../App/App.css'\n\nconst APIKEY = 'b0e658f81fbdeeaa452333e7e504314a';\n\nclass App extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      city: '',\n      date: '',\n      time: '',\n      icon: '',\n      description: '',\n      temperature: '',\n      feelsLikeTemp: '',\n      humidity: '',\n      wind: '',\n      isLoaded: false,\n      error: null,\n      weatherCards: [],\n      checkedBtnId: '',\n      tempConvert: false, \n      globalTempConvert: false\n    }\n    // initialize our functions\n    this.fetchData = this.fetchData.bind(this);\n    this.fetchDataEnter = this.fetchDataEnter.bind(this);\n    this.moreInfoRequest = this.moreInfoRequest.bind(this);\n    this.deleteCards = this.deleteCards.bind(this);\n    this.updateCards = this.updateCards.bind(this);\n    this.getUpdateTime = this.getUpdateTime.bind(this);\n    this.startInterval = this.startInterval.bind(this);\n    this.newInterval = this.newInterval.bind(this);\n    this.updateDisplay = this.updateDisplay.bind(this);\n    this.convertToCels = this.convertToCels.bind(this);\n    this.convertToFahr = this.convertToFahr.bind(this);\n    this.cityItemClick = this.cityItemClick.bind(this);\n    this.globalChangeToCels = this.globalChangeToCels.bind(this);\n    this.globalChangeToFahr = this.globalChangeToFahr.bind(this);\n    this.handleOnDragEnd = this.handleOnDragEnd.bind(this);\n  };\n  // fucntion to get localStorage data\n  componentDidMount () {\n    if(localStorage.getItem('card') !== null) {\n      let storage = JSON.parse(localStorage.getItem('card'));\n        this.setState({\n          isLoaded: storage.isLoaded,\n          city: storage.city,\n          date: storage.date,\n          time: storage.time,\n          temperature: storage.temperature,\n          feelsLikeTemp: storage.feelsLikeTemp,\n          description: storage.description,\n          humidity: storage.humidity,\n          wind: storage.wind,\n          icon: storage.icon,\n          weatherCards: storage.weatherCards,\n          tempConvert: storage.tempConvert,\n          globalTempConvert: storage.globalTempConvert\n        }, () => {\n          this.startInterval();\n        })\n      }\n      else {\n        this.startInterval();\n      }\n  };\n  // start update interval\n  startInterval () {\n    if(localStorage.getItem('updatetime') !== null) {\n      let storagetime = localStorage.getItem('updatetime');\n      let radioButtons = document.querySelectorAll('.radio');\n      radioButtons.forEach(item => {\n        item.defaultChecked = false\n        if(item.value === storagetime) {\n          item.defaultChecked = true\n        }\n      });\n      intervalTime = storagetime * 60000;\n      this.updateCards();\n      interval = setInterval(this.updateCards, intervalTime);\n    }\n    else  {\n      let radioButtons = document.querySelectorAll('.radio');\n      radioButtons.forEach(item => {\n        if(item.value === '10') {\n          item.defaultChecked = true\n          intervalTime = item.value * 60000;\n        }\n    })\n      this.updateCards();\n      interval = setInterval(this.updateCards, intervalTime);\n    };\n  };\n  // function to update weather cards in sidebar\n  updateCards () {\n    if(this.state.weatherCards.length > 0) {\n      this.state.weatherCards.map(currCard => {\n        fetch(`https://api.openweathermap.org/data/2.5/weather?q=${currCard[0]}&appid=${APIKEY}`)\n        .then(response => {\n          if (response.ok) {\n            return response.json();\n          } else {\n              throw new Error('Something went wrong ...');\n          }\n        })\n        .then(\n          (data) => {\n            let date = new Date();\n            let timeNow = 0;\n            date.getHours() < 10 ? timeNow = '0' + date.getHours() + ':' + date.getMinutes()\n            : timeNow = date.getHours() + ':' + date.getMinutes();\n            date.getMinutes() < 10 ? timeNow = date.getHours() + ':' + '0' + date.getMinutes() \n            : timeNow = date.getHours() + ':' + date.getMinutes();\n            if(this.state.globalTempConvert === true) {\n              currCard[1] = Math.round((Math.round(data.main.temp - 273.15) * 1.8) + 32);    \n            } else {\n              currCard[1] = Math.round(data.main.temp - 273.15)\n            }\n            currCard[2] = timeNow;\n            currCard[3] = data.weather[0].description;\n          });\n        });\n        localStorage.setItem(\"card\", JSON.stringify(this.state));\n        this.updateDisplay();\n    }\n  };\n  // function to make ajax request on click button \"show weather\"\n  fetchData () {\n    let input = document.querySelector('.search-input');\n    input.blur();\n    if(input.value !== '') {\n    fetch(`https://api.openweathermap.org/data/2.5/weather?q=${input.value}&appid=${APIKEY}`)\n      .then(response => {\n        if (response.ok) {\n          return response.json();\n        } else {\n            throw new Error('Something went wrong ...');\n        }\n      })\n      .then(\n        (data) => {\n          let extraCard = '';\n          this.state.weatherCards.map(item => {\n              extraCard = this.state.weatherCards.filter(item => item[0] === data.name);\n          })\n          if (input.value !== '' && extraCard.length < 1) {\n            if (this.state.weatherCards.length > 2) {this.state.weatherCards.pop()}\n            let iconId = data.weather[0].icon;\n            let currentIcon = `http://openweathermap.org/img/wn/${iconId}.png`\n            let date = new Date();\n            let timeNow = 0;\n            date.getHours() < 10 ? timeNow = '0' + date.getHours() + ':' + date.getMinutes()\n            : timeNow = date.getHours() + ':' + date.getMinutes();\n            date.getMinutes() < 10 ? timeNow = date.getHours() + ':' + '0'+ date.getMinutes() \n            : timeNow = date.getHours() + ':' + date.getMinutes();\n            let localTime = date.getTime();\n            let localOffset = date.getTimezoneOffset() * 60000;\n            let utc = localTime + localOffset;\n            let —ÅityTime = utc + (1000 * data.timezone);\n            let newDate = new Date(—ÅityTime);\n            let currentTime = 0;\n            newDate.getHours() < 10 ? currentTime = '0' + newDate.getHours() + ':' + newDate.getMinutes()\n            : currentTime = newDate.getHours() + ':' + newDate.getMinutes();\n            newDate.getMinutes() < 10 ? currentTime = newDate.getHours() + ':' + '0' + newDate.getMinutes()\n            : currentTime = newDate.getHours() + ':' + newDate.getMinutes();\n            let options = { month: 'long', day: 'numeric'};\n            let currentDate = new Intl.DateTimeFormat('en-US', options).format(newDate);\n            let tempToWeatherCards = null;\n            this.state.globalTempConvert === true ? tempToWeatherCards =  Math.round((Math.round(data.main.temp - 273.15) * 1.8) + 32)   \n            : tempToWeatherCards = Math.round(data.main.temp - 273.15);\n            let cardId = '';\n            cardId = String(data.id)\n            this.setState({\n              isLoaded: true,\n              city: data.name,\n              date: currentDate,\n              time: currentTime,\n              description: data.weather[0].description,\n              humidity: data.main.humidity + '%',\n              wind: data.wind.speed + ' m/s',\n              icon: currentIcon,\n              weatherCards: [[data.name, tempToWeatherCards, timeNow, data.weather[0].description, cardId], ...this.state.weatherCards]\n            });\n            if(this.state.globalTempConvert === true) {\n              this.setState({\n                temperature: Math.round((Math.round(data.main.temp - 273.15) * 1.8) + 32),\n                feelsLikeTemp: Math.round((Math.round(data.main.feels_like - 273.15) * 1.8) + 32)    \n              });\n            }\n            else {\n              this.setState({\n                temperature: Math.round(data.main.temp - 273.15),\n                feelsLikeTemp: Math.round(data.main.feels_like - 273.15)\n              })\n            }\n            input.value = '';\n            let searchbox = document.getElementById('search-list');\n            searchbox.classList.remove('cities-list-after');\n            searchbox.classList.add('cities-list-before');\n            localStorage.setItem(\"card\", JSON.stringify(this.state));\n          } else {\n            input.value = ''\n          }\n        },\n      )\n      .catch((error) => {\n        this.setState({\n          isLoaded: false,\n          error\n        });\n      })\n    }\n  };\n  // function to make fetchData() on click \"enter\"\n  fetchDataEnter (e) {\n    if(e.keyCode === 13) {\n      this.fetchData();\n    }\n  };\n  // fucntion to make ajax request on click on current weather card\n  moreInfoRequest (currentData) {\n    fetch(`https://api.openweathermap.org/data/2.5/weather?q=${currentData[0]}&appid=${APIKEY}`)\n      .then(response => {\n        if (response.ok) {\n          return response.json();\n        } else {\n            throw new Error('Something went wrong ...');\n        }\n      })\n      .then(\n        (data) => {\n            let iconId = data.weather[0].icon;\n            let currentIcon = `http://openweathermap.org/img/wn/${iconId}.png`\n            let date = new Date();\n            let timeNow = 0;\n            date.getHours() < 10 ? timeNow = '0' + date.getHours() + ':' + date.getMinutes()\n            : timeNow = date.getHours() + ':' + date.getMinutes();\n            date.getMinutes() < 10 ? timeNow = date.getHours() + ':' + '0' + date.getMinutes() \n            : timeNow = date.getHours() + ':' + date.getMinutes();\n            this.state.weatherCards.map((item) => {\n              if (item === currentData) {\n                item[3] = data.weather[0].description\n                item[2] = timeNow;\n                if(this.state.globalTempConvert === true) {\n                  item[1] = Math.round((Math.round(data.main.temp - 273.15) * 1.8) + 32);   \n                } else {\n                  item[1] = Math.round(data.main.temp - 273.15)\n                }\n              }\n            });\n            let localTime = date.getTime();\n            let localOffset = date.getTimezoneOffset() * 60000;\n            let utc = localTime + localOffset;\n            let —ÅityTime = utc + (1000 * data.timezone);\n            let newDate = new Date(—ÅityTime);\n            let currentTime = 0;\n            newDate.getHours() < 10 ? currentTime = '0' + newDate.getHours() + ':' + newDate.getMinutes()\n            : currentTime = newDate.getHours() + ':' + newDate.getMinutes();\n            newDate.getMinutes() < 10 ? currentTime = newDate.getHours() + ':' + '0' + newDate.getMinutes()\n            : currentTime = newDate.getHours() + ':' + newDate.getMinutes();\n            let options = { month: 'long', day: 'numeric'};\n            let currentDate = new Intl.DateTimeFormat('en-US', options).format(newDate);\n            this.setState({\n              isLoaded: true,\n              city: data.name,\n              date: currentDate,\n              time: currentTime,\n              description: data.weather[0].description,\n              humidity: data.main.humidity + '%',\n              wind: data.wind.speed + ' m/s',\n              icon: currentIcon,\n              weatherCards: this.state.weatherCards\n            });\n            if(this.state.globalTempConvert === true) {\n              if(this.state.tempConvert === false) {\n                this.setState({\n                  tempConvert: true\n                })\n              }\n              this.setState({\n                temperature: Math.round((Math.round(data.main.temp - 273.15) * 1.8) + 32),\n                feelsLikeTemp: Math.round((Math.round(data.main.feels_like - 273.15) * 1.8) + 32)    \n              });\n            }\n            else {\n              if(this.state.tempConvert === true) {\n                this.setState({\n                  tempConvert: false\n                })\n              }\n              this.setState({\n                temperature: Math.round(data.main.temp - 273.15),\n                feelsLikeTemp: Math.round(data.main.feels_like - 273.15)\n              })\n            }\n            localStorage.setItem(\"card\", JSON.stringify(this.state));\n        },\n      )\n      .catch((error) => {\n        this.setState({\n          isLoaded: false,\n          error\n        });\n      })\n  };\n  // function to delete current card\n  deleteCards (card) {\n    let afterDelCards = this.state.weatherCards.filter(item => item !== card)\n    if(this.state.weatherCards.indexOf(card) === 2 || this.state.weatherCards.indexOf(card) === 1) {\n      let preventCardIndex = this.state.weatherCards.indexOf(card) - 1;\n      let preventCard = this.state.weatherCards[preventCardIndex];\n      let chosenCardIndex = null;\n      this.state.weatherCards.map(item => {\n        if(this.state.city === item[0]) {\n          chosenCardIndex = this.state.weatherCards.indexOf(item)\n        }\n      });\n      if (chosenCardIndex !== 0) {\n        this.setState({city: preventCard[0]},\n          () => {\n            this.updateDisplay();\n          })\n      }\n    }\n    else {\n      if (this.state.weatherCards.length > 1) {\n          let nextCardIndex = this.state.weatherCards.indexOf(card) + 1;\n          let nextCard = this.state.weatherCards[nextCardIndex];\n          let chosenCardIndex = null;\n          this.state.weatherCards.map(item => {\n            if(this.state.city === item[0]) {\n              chosenCardIndex = this.state.weatherCards.indexOf(item)\n            }\n          });\n          if (chosenCardIndex !== 2) {\n            this.setState({city: nextCard[0]},\n            () => {\n              this.updateDisplay();\n            })\n          }\n      }\n      else {\n        this.setState({isLoaded: false, error: false});\n      };\n    };\n    this.setState({weatherCards: afterDelCards}, \n    () => {\n      localStorage.setItem(\"card\", JSON.stringify(this.state))\n    });\n  };\n  // function to get time of automatically updating weather cards\n  getUpdateTime (e) {\n    this.setState({\n      checkedBtnId: e.target.value}, \n      () => {localStorage.setItem(\"updatetime\", this.state.checkedBtnId)\n    });\n    if(this.state.weatherCards.length > 0) {\n      this.updateCards();\n      clearInterval(interval);\n      interval = '';\n      intervalTime = e.target.value * 60000;\n      this.newInterval()\n    };\n  };\n  // function to start new interval when we click on radio button(10min, 30min, 60min)\n  newInterval () {\n    interval = setInterval(this.updateCards, intervalTime)\n  };\n  // function to update display card on click \"update button\", making ajax request\n  updateDisplay () {\n    fetch(`https://api.openweathermap.org/data/2.5/weather?q=${this.state.city}&appid=${APIKEY}`)\n      .then(response => {\n        if (response.ok) {\n          return response.json();\n        } else {\n            throw new Error('Something went wrong ...');\n        }\n      })\n      .then(\n        (data) => {\n            let iconId = data.weather[0].icon;\n            let currentIcon = `http://openweathermap.org/img/wn/${iconId}.png`\n            let date = new Date();\n            let timeNow = 0;\n            date.getHours() < 10 ? timeNow = '0' + date.getHours() + ':' + date.getMinutes()\n            : timeNow = date.getHours() + ':' + date.getMinutes();\n            date.getMinutes() < 10 ? timeNow = date.getHours() + ':' + '0' + date.getMinutes() \n            : timeNow = date.getHours() + ':' + date.getMinutes();\n            this.state.weatherCards.map((item) => {\n              if (item[0] === this.state.city) {\n                item[3] = data.weather[0].description\n                item[2] = timeNow;\n                if(this.state.globalTempConvert === true) {\n                  item[1] = Math.round((Math.round(data.main.temp - 273.15) * 1.8) + 32);   \n                } else {\n                  item[1] = Math.round(data.main.temp - 273.15)\n                }\n              }\n            });\n            let localTime = date.getTime();\n            let localOffset = date.getTimezoneOffset() * 60000;\n            let utc = localTime + localOffset;\n            let —ÅityTime = utc + (1000 * data.timezone);\n            let newDate = new Date(—ÅityTime);\n            let currentTime = 0;\n            newDate.getHours() < 10 ? currentTime = '0' + newDate.getHours() + ':' + newDate.getMinutes()\n            : currentTime = newDate.getHours() + ':' + newDate.getMinutes();\n            newDate.getMinutes() < 10 ? currentTime = newDate.getHours() + ':' + '0' + newDate.getMinutes()\n            : currentTime = newDate.getHours() + ':' + newDate.getMinutes();\n            let options = { month: 'long', day: 'numeric'};\n            let currentDate = new Intl.DateTimeFormat('en-US', options).format(newDate);\n            this.setState({\n              isLoaded: true,\n              city: data.name,\n              date: currentDate,\n              time: currentTime,\n              description: data.weather[0].description,\n              humidity: data.main.humidity + '%',\n              wind: data.wind.speed + ' m/s',\n              icon: currentIcon,\n              weatherCards: this.state.weatherCards,\n            });\n            if(this.state.globalTempConvert === true) {\n              if(this.state.tempConvert === false) {\n                this.setState({\n                  tempConvert: true\n                })\n              }\n               this.setState({\n                temperature: Math.round((Math.round(data.main.temp - 273.15) * 1.8) + 32),\n                feelsLikeTemp: Math.round((Math.round(data.main.feels_like - 273.15) * 1.8) + 32)    \n              });\n            }\n            else {\n              if(this.state.tempConvert === true) {\n                this.setState({\n                  tempConvert: false\n                })\n              }\n              this.setState({\n                temperature: Math.round(data.main.temp - 273.15),\n                feelsLikeTemp: Math.round(data.main.feels_like - 273.15)\n              })\n            }\n            localStorage.setItem(\"card\", JSON.stringify(this.state))\n        },\n      )\n      .catch((error) => {\n        this.setState({\n          isLoaded: false,\n          error\n        });\n      })\n  };\n  // function to convert temperature from celcius to fahrenheit\n  convertToCels (e) {\n    if(this.state.tempConvert === true) {\n      let celcius = Math.round((this.state.temperature - 32) / 1.8);\n      let feelslike = Math.round((this.state.feelsLikeTemp - 32) / 1.8);\n      this.setState({tempConvert: false, temperature: celcius, feelsLikeTemp: feelslike}, () => \n      {localStorage.setItem(\"card\", JSON.stringify(this.state))})\n    }\n  }\n  // function to convert temperature from fahrenheit to celcius\n  convertToFahr (e) {\n    if(this.state.tempConvert === false) {\n      let fahrenheit = Math.round((this.state.temperature * 1.8) + 32);\n      let feelslike = Math.round((this.state.feelsLikeTemp * 1.8) + 32);\n      this.setState({tempConvert: true, temperature: fahrenheit, feelsLikeTemp: feelslike}, () => \n      {localStorage.setItem(\"card\", JSON.stringify(this.state))})\n    }\n  }\n  // click handler in list of cities in Heade.jsx, input, dropdown list\n  cityItemClick (currItem) {\n    let input = document.querySelector('.search-input');\n    input.value = currItem;\n    this.fetchData();\n    let searchbox = document.getElementById('search-list');\n    searchbox.classList.remove('cities-list-after');\n    searchbox.classList.add('cities-list-before');\n  };\n  // global change to celcius\n  globalChangeToCels () {\n    if(this.state.globalTempConvert === true) {\n      this.state.weatherCards.map(item => {\n        item[1] = Math.round((item[1] - 32) / 1.8)\n      })\n      this.setState({\n        globalTempConvert: false\n      }, () => \n      {localStorage.setItem(\"card\", JSON.stringify(this.state))})\n      if(this.state.tempConvert === true) {\n        let celcius = Math.round((this.state.temperature - 32) / 1.8);\n        let feelslike = Math.round((this.state.feelsLikeTemp - 32) / 1.8);\n        this.setState({\n          globalTempConvert: false,\n          tempConvert: false,\n          temperature: celcius, \n          feelsLikeTemp: feelslike\n        }, () => \n        {localStorage.setItem(\"card\", JSON.stringify(this.state))})\n      }\n    }\n  };\n  // global change to fahrenheit\n  globalChangeToFahr () {\n    if(this.state.globalTempConvert === false) {\n      this.setState({\n        globalTempConvert: true\n      }, () => \n      {localStorage.setItem(\"card\", JSON.stringify(this.state))})\n      this.state.weatherCards.map(item => {\n        item[1] = Math.round((item[1] * 1.8) + 32)\n      })\n      if(this.state.tempConvert !== true) {\n        let fahrenheit = Math.round((this.state.temperature * 1.8) + 32);\n        let feelslike = Math.round((this.state.feelsLikeTemp * 1.8) + 32);\n        this.setState({\n          globalTempConvert: true,\n          temperature: fahrenheit, \n          tempConvert: true,\n          feelsLikeTemp: feelslike\n        }, () => \n        {localStorage.setItem(\"card\", JSON.stringify(this.state))})\n      }\n    }\n  };\n  // drag and drop cards \n  handleOnDragEnd (result) {\n    if (!result.destination) return;\n    const items = Array.from(this.state.weatherCards);\n    const [reorderedItem] = items.splice(result.source.index, 1);\n    items.splice(result.destination.index, 0, reorderedItem);\n    this.setState ({\n      weatherCards: items\n    }, () => {localStorage.setItem(\"card\", JSON.stringify(this.state))})\n  };\n\n  render () {\n    return (\n      <div className='app'>\n          <Header \n            globalTempConvert={this.state.globalTempConvert}\n            globalChangeTempCels={this.globalChangeToCels}\n            globalChangeTempFahr={this.globalChangeToFahr}\n            cityItemClick={this.cityItemClick}\n            enterClick={this.fetchDataEnter} \n            showWeather={this.fetchData}\n          />\n          <div className='weather-info'>\n            <List\n              handleOnDragEnd={this.handleOnDragEnd}\n              deleteCard={this.deleteCards} \n              moreInfo={this.moreInfoRequest} \n              cards={this.state.weatherCards}\n              updateCard={this.updateCards}\n              getTimeUpdate={this.getUpdateTime}\n            />\n            <Display \n              cards={this.state.weatherCards}\n              tempConvert={this.state.tempConvert}\n              convertToCels={this.convertToCels}\n              convertToFahr={this.convertToFahr}\n              updateDisplayCard={this.updateDisplay}\n              loaded={this.state.isLoaded} \n              error={this.state.error} \n              cityName={this.state.city} \n              currentTime={this.state.time} \n              currentDate={this.state.date} \n              weatherDesc={this.state.description} \n              iconLink={this.state.icon} \n              temperature={this.state.temperature} \n              feelsLikeTemp={this.state.feelsLikeTemp} \n              humidity={this.state.humidity} \n              windSpeed={this.state.wind}\n            />\n          </div>\n          <Footer/>\n      </div>\n    )\n  };\n};\nexport default App;\nlet intervalTime = '';\nlet interval = '';\n\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport reportWebVitals from './reportWebVitals';\n\nimport App from './components/App/App.jsx';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}